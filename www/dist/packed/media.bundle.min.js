angular.module("starter").controller("MediaPlayerController",function($cordovaSocialSharing,$ionicHistory,Modal,$location,$rootScope,$scope,$state,$stateParams,$timeout,$translate,$window,Application,HomepageLayout,MediaPlayer,SB,SocialSharing,LinkService){$scope.is_webview=!$rootScope.isNativeApp,$scope.loadContent=function(){MediaPlayer.media||MediaPlayer.loading()},$scope.backButton=function(){console.log("back media"),MediaPlayer.goBack(MediaPlayer.is_radio,!0)},$scope.$on("$destroy",function(){MediaPlayer.is_initialized&&(MediaPlayer.is_minimized=!0,$rootScope.$broadcast(SB.EVENTS.MEDIA_PLAYER.SHOW,{isRadio:MediaPlayer.is_radio}))}),$scope.purchase=function(){$rootScope.isNotAvailableOffline()||MediaPlayer.current_track.purchaseUrl&&LinkService.openLink(MediaPlayer.current_track.purchaseUrl)},$scope.share=function(){var content=MediaPlayer.current_track.name;MediaPlayer.is_radio||(content=MediaPlayer.current_track.name+" from "+MediaPlayer.current_track.artistName);var file=MediaPlayer.current_track.albumCover?MediaPlayer.current_track.albumCover:void 0;SocialSharing.share(content,void 0,void 0,void 0,file)},$scope.loadContent()}),angular.module("starter").controller("MusicPlaylistsController",function($ionicHistory,$location,$q,$rootScope,$scope,$state,$stateParams,$window,Application,MusicAlbum,MusicPlaylist,MusicTracksLoader,MediaPlayer){angular.extend($scope,{is_loading:!0,value_id:$stateParams.value_id,active_tab:"playlists"}),MusicPlaylist.value_id=$stateParams.value_id,MusicAlbum.value_id=$stateParams.value_id,$scope.tracks_loader=null,MusicPlaylist.findPageTitle().then(function(data){$scope.page_title=data.page_title}),$scope.loadContent=function(){MusicPlaylist.findAll().then(function(data){console.log("MusicPlaylist.findAll()",data);var promises=data.playlists.reduce(function(promises,playlist){return promises.push(MusicAlbum.findByPlaylist(playlist.id)),promises},[]);$q.all(promises).then(function(playlistsAlbums){console.log("playlistsAlbums",playlistsAlbums),$scope.playlists=data.playlists.reduce(function(playlists,playlist){console.log("$scope.playlists = data.playlists.reduce(function (playlists, playlist) {",playlists,playlist);var index=playlists.length;if(playlist.albums=playlistsAlbums[index].albums,playlist.images=[],!playlist.artworkUrl){playlist.images=playlist.albums.reduce(function(albums,album){return albums.length<4&&albums.push(album),albums},[]);for(var i=playlist.images.length;i<4;i++)playlist.images.push({artworkUrl:data.artwork_placeholder})}for(var paged_playlist_images=[],images=[],j=0;j<playlist.images.length;j++)images.push(playlist.images[j]),2===images.length&&(paged_playlist_images.push(images),images=[]);return 1===images.length&&paged_playlist_images.push(images),playlist.paged_playlist_images=paged_playlist_images,playlists.push(playlist),playlists},[]),MusicTracksLoader.loadTracksFromPlaylists($scope.playlists).then(function(results){console.log("MusicTracksLoader.loadTracksFromPlaylists($scope.playlists)",results),$scope.tracks_loader=results.tracksLoader}).then(function(){for(var paged_playlists=[],playlists=[],i=0;i<$scope.playlists.length;i++)playlists.push($scope.playlists[i]),2===playlists.length&&(paged_playlists.push(playlists),playlists=[]);1===playlists.length&&paged_playlists.push(playlists),$scope.playlists.paged_playlists=paged_playlists,$scope.is_loading=!1})})},function(){$scope.is_loading=!1})},$scope.showPlaylistAlbums=function(playlist){$state.go("music-playlist-albums",{value_id:$stateParams.value_id,playlist_id:playlist.id})},$scope.showAlbums=function(playlist){$state.go("music-album-list",{value_id:$stateParams.value_id})},$scope.playAll=function(){$scope.is_loading||MediaPlayer.init($scope.tracks_loader,!1,0)},$scope.loadContent()}).controller("MusicPlaylistAlbumsController",function($ionicScrollDelegate,$location,$rootScope,$stateParams,$scope,$state,$window,Application,MusicAlbum,MusicPlaylist,MusicTracksLoader,MediaPlayer){$scope.is_loading=!0,$scope.value_id=$stateParams.value_id,MusicPlaylist.value_id=$stateParams.value_id,MusicAlbum.value_id=$stateParams.value_id,window.$ionicScrollDelegate=$ionicScrollDelegate,$scope.tracks_loader=null,$scope.loadContent=function(){MusicPlaylist.find($stateParams.playlist_id).then(function(data){console.log("MusicPlaylist.find($stateParams.playlist_id)",data),$scope.playlist=data.playlist,$scope.page_title=data.playlist.name,MusicAlbum.findByPlaylist($stateParams.playlist_id).then(function(data){console.log("MusicAlbum.findByPlaylist($stateParams.playlist_id)",data);for(var paged_albums=[],albums=[],i=0;i<data.albums.length;i++)albums.push(data.albums[i]),2===albums.length&&(paged_albums.push(albums),albums=[]);1===albums.length&&paged_albums.push(albums),$scope.playlist.paged_albums=paged_albums,$scope.playlist.albums=data.albums,$ionicScrollDelegate.$getByHandle("albums").resize(),MusicTracksLoader.loadTracksFromAlbums($scope.playlist.albums).then(function(results){console.log("MusicTracksLoader.loadTracksFromAlbums($scope.playlist.albums)",results),$scope.tracks_loader=results.tracksLoader})}).then(function(){$scope.is_loading=!1})},function(){}).then(function(){$scope.is_loading=!1})},$scope.showAlbum=function(album){$location.path(album.path)},$scope.showPlaylistTracks=function(){$state.go("music-track-list",{value_id:$stateParams.value_id,playlist_id:$stateParams.playlist_id})},$scope.playAll=function(){$scope.is_loading||MediaPlayer.init($scope.tracks_loader,!1,0)},$scope.loadContent()}).controller("MusicAlbumsListController",function($ionicHistory,$location,$q,$rootScope,$stateParams,$scope,$state,$window,Application,MusicPlaylist,MusicAlbum,MusicTracksLoader,MediaPlayer){angular.extend($scope,{is_loading:!0,value_id:$stateParams.value_id,active_tab:"albums",tracks_loader:null}),MusicAlbum.value_id=$stateParams.value_id,MusicPlaylist.value_id=$stateParams.value_id,MusicPlaylist.findPageTitle().then(function(data){$scope.page_title=data.page_title}),$scope.loadContent=function(){MusicAlbum.findAll().then(function(data){console.log("MusicAlbum.findAll()",data);for(var paged_albums=[],albums=[],i=0;i<data.albums.length;i++)albums.push(data.albums[i]),2===albums.length&&(paged_albums.push(albums),albums=[]);1===albums.length&&paged_albums.push(albums),$scope.albums=data.albums,$scope.albums.paged_albums=paged_albums,MusicTracksLoader.loadTracksFromAlbums($scope.albums).then(function(results){console.log("MusicTracksLoader.loadTracksFromAlbums($scope.albums)",results),$scope.tracks_loader=results.tracksLoader})}).then(function(){$scope.is_loading=!1})},$scope.showPlaylists=function(playlist){$state.go("music-playlist-list",{value_id:$scope.value_id})},$scope.showAlbum=function(album){$location.path(album.path)},$scope.playAll=function(){$scope.is_loading||MediaPlayer.init($scope.tracks_loader,!1,0)},$scope.loadContent()}).controller("MusicAlbumViewController",function($location,$scope,$rootScope,$stateParams,$window,Application,MusicAlbum,MusicTrack,MusicTracksLoader,MediaPlayer){$scope.is_loading=!0,$scope.value_id=$stateParams.value_id,MusicAlbum.value_id=$stateParams.value_id,MusicTrack.value_id=$stateParams.value_id,$scope.loadContent=function(){var param={};$stateParams.album_id?param.album_id=$stateParams.album_id:param.track_id=$stateParams.track_id,MusicAlbum.find(param).then(function(data){console.log("MusicAlbum.find(param)",data),$scope.album=data.album,$scope.page_title=data.album.name,MusicTrack.findByAlbum(param).then(function(data){console.log("MusicTrack.findByAlbum(param)",data),$scope.album.tracks=data.tracks},function(){$scope.is_loading=!1})}).then(function(){$scope.is_loading=!1})},$scope.play=function(track_index){if(!$scope.is_loading){var tracks_loader=MusicTracksLoader._buildTracksLoaderForSingleAlbum($scope.album,$scope.album.tracks);MediaPlayer.init(tracks_loader,!1,track_index)}},$scope.loadContent()}).controller("MusicTrackListController",function($ionicHistory,$ionicPlatform,$location,$q,$rootScope,$stateParams,$scope,$window,Application,MusicPlaylist,MusicAlbum,MusicTrack,MusicTracksLoader,MediaPlayer){$scope.is_loading=!0,$scope.is_loading_more_tracks=!1,$scope.value_id=$stateParams.value_id,MusicPlaylist.value_id=$stateParams.value_id,MusicAlbum.value_id=$stateParams.value_id,MusicTrack.value_id=$stateParams.value_id,$scope.loadContent=function(){MusicPlaylist.find($stateParams.playlist_id).then(function(data){$scope.playlist=data.playlist,$scope.page_title=data.playlist.name,MusicAlbum.findByPlaylist($stateParams.playlist_id).then(function(data){MusicTracksLoader.loadTracksFromAlbums(data.albums).then(function(results){$scope.tracks_loader=results.tracksLoader,$scope.tracks=results.tracksLoaded}).finally(function(){$scope.is_loading=!1})},function(){$scope.is_loading=!1})},function(){$scope.is_loading=!1})},$scope.showPlaylistAlbums=function(){$ionicHistory.goBack()},$scope.play=function($trackIndex){MediaPlayer.init($scope.tracks_loader,!1,$trackIndex)},$scope.enable_load_onscroll=!0,$scope.loadMore=function(){if($scope.tracks_loader)return $scope.is_loading_more_tracks=!0,$scope.tracks_loader.loadMore(50).then(function(results){$scope.tracks=$scope.tracks.concat(results.tracksLoaded),$scope.is_loading_more_tracks=!1})},$scope.loadContent()}),angular.module("starter").factory("MusicPlaylist",function($pwaRequest){var factory={value_id:null,extendedOptions:{}};return factory.setValueId=function(value_id){factory.value_id=value_id},factory.setExtendedOptions=function(options){factory.extendedOptions=options},factory.preFetch=function(page){factory.findAll()},factory.findAll=function(){return this.value_id?$pwaRequest.get("media/mobile_api_music_playlist/findall",angular.extend({urlParams:{value_id:this.value_id}},factory.extendedOptions)):$pwaRequest.reject("[Factory::MusicPlaylist.findAll] missing value_id")},factory.find=function(playlist_id){return this.value_id?$pwaRequest.get("media/mobile_api_music_playlist/find",{urlParams:{value_id:this.value_id,playlist_id:playlist_id}}):$pwaRequest.reject("[Factory::MusicPlaylist.find] missing value_id")},factory.findPageTitle=function(){return this.value_id?$pwaRequest.get("media/mobile_api_music_playlist/getpagetitle",{urlParams:{value_id:this.value_id}}):$pwaRequest.reject("[Factory::MusicPlaylist.findPageTitle] missing value_id")},factory}),angular.module("starter").factory("MusicAlbum",function($pwaRequest){var factory={value_id:null};return factory.find=function(element){if(!this.value_id||!element)return $pwaRequest.reject("[Factory::MusicAlbum.find] missing value_id and/or element");var params={value_id:this.value_id};return element.album_id?params.album_id=element.album_id:params.track_id=element.track_id,$pwaRequest.get("media/mobile_api_music_album/find",{urlParams:params})},factory.findAll=function(){return this.value_id?$pwaRequest.get("media/mobile_api_music_album/findall",{urlParams:{value_id:this.value_id}}):$pwaRequest.reject("[Factory::MusicAlbum.findAll] missing value_id")},factory.findByPlaylist=function(playlist_id){return this.value_id&&playlist_id?$pwaRequest.get("media/mobile_api_music_album/findbyplaylist",{urlParams:{value_id:this.value_id,playlist_id:playlist_id}}):$pwaRequest.reject("[Factory::MusicAlbum.findByPlaylist] missing value_id and/or playlist_id")},factory}),angular.module("starter").factory("MusicTrack",function($pwaRequest){var factory={value_id:null};return factory.findByAlbum=function(element){if(!this.value_id||!element)return $pwaRequest.reject("[Factory::MusicTrack.findByAlbum] missing value_id and/or element");var params={value_id:this.value_id};return element.album_id?params.album_id=element.album_id:params.track_id=element.track_id,$pwaRequest.get("media/mobile_api_music_track/findbyalbum",{urlParams:params})},factory});