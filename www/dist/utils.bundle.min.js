window.Features=new function(){var _app=angular.module("starter"),$this={},__features={};return $this.featuresToLoadOnStart=[],$this.insertCSS=function(css_content,feature_code){var css=document.createElement("style");css.type="text/css",css.setAttribute("data-feature",feature_code),css.innerHTML=css_content,document.head.appendChild(css)},$this.register=function(json,bundle){angular.isDefined(json.load_on_start)&&json.load_on_start&&$this.featuresToLoadOnStart.push(bundle);var feature_base="features/"+json.code+"/";_app.config(["$stateProvider","HomepageLayoutProvider",function($stateProvider,HomepageLayoutProvider){var template_base=feature_base+"assets/templates/",routes={};angular.forEach(json.routes,function(r){if(!1!==r.autoregister){var route={url:BASE_PATH+"/"+r.url,controller:r.controller};switch(angular.isDefined(bundle)&&(route.resolve={lazy:["$ocLazyLoad",function($ocLazyLoad){return $ocLazyLoad.load(bundle)}]}),!0){case angular.isString(r.templateHTML):route.template=r.templateHTML;break;case angular.isObject(r.layouts)&&angular.isString(r.template):route.templateUrl=function(param){if(void 0!==param.layout_id&&angular.isString(r.layouts[param.layout_id]))return template_base+r.layouts[param.layout_id]+"/"+r.template;var layout_id=HomepageLayoutProvider.getLayoutIdForValueId(param.value_id);return angular.isString(r.layouts[layout_id])?template_base+r.layouts[layout_id]+"/"+r.template:template_base+r.layouts.default+"/"+r.template};break;case!0===r.externalTemplate&&angular.isString(r.template):route.templateUrl=r.template;break;case angular.isString(r.template):route.templateUrl=template_base+r.template}route.cache=!1!==r.cache,this[r.state]=route}},routes),angular.forEach(routes,function(route,state){console.log("creating state "+state+" with route",route),$stateProvider.state(state,route)})}]),__features[json.code]=json},_app.config(["$stateProvider",function($stateProvider){$stateProvider.state("go-to-feature",{url:BASE_PATH+"/goto/feature/:code/value_id/:value_id",template:"redirecting..."})}]).factory("Features",["$q","$state",function($q,$state){var factory={};return factory.register=function(){throw new Error("You cannot register new features at runtime, please use window.Features before angular app has bootstraped.")},factory.get=function(feature_code){return __features.hasOwnProperty(feature_code)?__features[feature_code]:null},factory.goTo=function(feature_code,value_id){var feature=factory.get(feature_code);if(feature){for(var route=null,i=0;i<feature.routes.length;i++){var r=feature.routes[i];if(angular.isObject(r)&&r.root){route=feature.routes[i];break}}route&&($state.go(route.state,{value_id:value_id}),$q.resolve())}return $q.reject},factory}]).run(["$rootScope","Features",function($rootScope,Features){$rootScope.$on("$stateChangeStart",function(evt,toState,toParams,fromState,fromParams){angular.isObject(toState)&&"go-to-feature"===toState.name&&(evt.preventDefault(),angular.isObject(toParams)&&angular.isString(toParams.code)&&toParams.code.trim().length>0&&!isNaN(+toParams.value_id)&&+toParams.value_id>0&&Features.goTo(toParams.code,toParams.value_id))})}]),$this},angular.module("starter").config(["$provide",function($provide){var transformAsFormPost=function(data,getHeaders){function serializeData(data,prefix){angular.isString(prefix)||(prefix=""),prefix=prefix.trim(),angular.isArray(data)&&prefix.length<1&&(prefix="data");var pairs=[];if(angular.isObject(data)||angular.isArray(data)){var index=0;angular.forEach(data,function(value,key){angular.isArray(data)&&(key=index),key=encodeURIComponent(key),prefix.length>0&&(key=prefix+"["+key+"]"),angular.isArray(value)||angular.isObject(value)?pairs.push(serializeData(value,key)):((angular.isUndefined(value)||null===value)&&(value=""),pairs.push(key+"="+encodeURIComponent(value))),index+=1})}return pairs.join("&").replace(/%20/g,"+")}return serializeData(data)};$provide.decorator("$http",["$delegate",function($delegate){return $delegate.postForm=function(url,data,config){return angular.isObject(config)||(config={}),angular.isObject(config.headers)||(config.headers={}),config.headers["Content-Type"]="application/x-www-form-urlencoded; charset=utf-8",angular.isArray(config.transformRequest)?config.transformRequest.push(transformAsFormPost):angular.isFunction(config.transformRequest)?config.transformRequest=[config.transformRequest,transformAsFormPost]:config.transformRequest=transformAsFormPost,$delegate.post(url,data,config)},$delegate}])}]);